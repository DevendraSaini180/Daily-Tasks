Index: app/src/main/java/com/devendrasaini/sharedpreferencesapplication/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.devendrasaini.sharedpreferencesapplication;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.os.Bundle;\nimport android.widget.TextView;\n\nimport java.util.List;\n\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\nimport io.reactivex.rxjava3.annotations.NonNull;\nimport io.reactivex.rxjava3.core.Observer;\nimport io.reactivex.rxjava3.disposables.Disposable;\nimport io.reactivex.rxjava3.functions.Consumer;\nimport io.reactivex.rxjava3.schedulers.Schedulers;\nimport retrofit2.Call;\nimport retrofit2.Callback;\nimport retrofit2.Response;\nimport retrofit2.Retrofit;\nimport retrofit2.adapter.rxjava3.RxJava3CallAdapterFactory;\nimport retrofit2.converter.gson.GsonConverterFactory;\n\npublic class MainActivity extends AppCompatActivity {\n\n    String mUrl = \"https://picsum.photos/\";\n    TextView mApiResult;\n    Retrofit retrofit;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        uiInitialization();\n        retrofitBuilder();\n        getApiInstance();\n    }\n    public void uiInitialization() {\n        mApiResult = findViewById(R.id.imageList);\n    }\n\n    public void retrofitBuilder() {\n        retrofit = new Retrofit.Builder().baseUrl(mUrl)\n                .addConverterFactory(GsonConverterFactory.create())\n                .addCallAdapterFactory(RxJava3CallAdapterFactory.create())\n                .build();\n    }\n\n    public void getApiInstance() {\n        PhotosAPIService photosAPICall = retrofit.create(PhotosAPIService.class);\n        /*\n        Call<List<PhotosModel>> modelCall = photosAPICall.getPhotos();\n        modelCall.enqueue(new Callback<List<PhotosModel>>() {\n            @Override\n            public void onResponse(Call<List<PhotosModel>> call, Response<List<PhotosModel>> response) {\n\n                if(!response.isSuccessful())\n                {\n                    mApiResult.setText(\"Code: \" + response.code());\n                }\n\n                List<PhotosModel> photos = response.body();\n                for (PhotosModel photo : photos )\n                {\n                    String content = \"\";\n                    content += \"ID: \" + photo.getId() + \"\\n\";\n                    content += \"Author: \" + photo.getAuthor() + \"\\n\";\n                    content += \"Url: \" + photo.getUrl() + \"\\n\\n\";\n                    mApiResult.append(content);\n                }\n            }\n\n            @Override\n            public void onFailure(Call<List<PhotosModel>> call, Throwable t) {\n                mApiResult.setText(t.getMessage());\n            }\n        });\n\n         */\n        photosAPICall.getPhotos().subscribeOn(Schedulers.io())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Consumer<List<PhotosModel>>() {\n                    @Override\n                    public void accept(List<PhotosModel> photosModels) throws Throwable {\n                        for(PhotosModel photo : photosModels) {\n                            String content = \"\";\n                            content += \"ID: \" + photo.getId() + \"\\n\";\n                            content += \"Author: \" + photo.getAuthor() + \"\\n\";\n                            content += \"Height: \" + photo.getHeight() + \"\\n\";\n                            content += \"Width: \" + photo.getWidth() + \"\\n\";\n                            content += \"DownLoad Url: \" + photo.getDownload_url() + \"\\n\";\n                            content += \"Url: \" + photo.getUrl() + \"\\n\\n\";\n                            mApiResult.append(content);\n                        }\n                    }\n                });\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/devendrasaini/sharedpreferencesapplication/MainActivity.java b/app/src/main/java/com/devendrasaini/sharedpreferencesapplication/MainActivity.java
--- a/app/src/main/java/com/devendrasaini/sharedpreferencesapplication/MainActivity.java	(revision 3e3ce1517221bf1054adac34256c50884bd2f512)
+++ b/app/src/main/java/com/devendrasaini/sharedpreferencesapplication/MainActivity.java	(date 1632997964447)
@@ -1,21 +1,15 @@
 package com.devendrasaini.sharedpreferencesapplication;
 
-import androidx.appcompat.app.AppCompatActivity;
-
 import android.os.Bundle;
 import android.widget.TextView;
 
+import androidx.appcompat.app.AppCompatActivity;
+
 import java.util.List;
 
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
-import io.reactivex.rxjava3.annotations.NonNull;
-import io.reactivex.rxjava3.core.Observer;
-import io.reactivex.rxjava3.disposables.Disposable;
 import io.reactivex.rxjava3.functions.Consumer;
 import io.reactivex.rxjava3.schedulers.Schedulers;
-import retrofit2.Call;
-import retrofit2.Callback;
-import retrofit2.Response;
 import retrofit2.Retrofit;
 import retrofit2.adapter.rxjava3.RxJava3CallAdapterFactory;
 import retrofit2.converter.gson.GsonConverterFactory;
@@ -35,6 +29,7 @@
         retrofitBuilder();
         getApiInstance();
     }
+
     public void uiInitialization() {
         mApiResult = findViewById(R.id.imageList);
     }
@@ -48,41 +43,12 @@
 
     public void getApiInstance() {
         PhotosAPIService photosAPICall = retrofit.create(PhotosAPIService.class);
-        /*
-        Call<List<PhotosModel>> modelCall = photosAPICall.getPhotos();
-        modelCall.enqueue(new Callback<List<PhotosModel>>() {
-            @Override
-            public void onResponse(Call<List<PhotosModel>> call, Response<List<PhotosModel>> response) {
-
-                if(!response.isSuccessful())
-                {
-                    mApiResult.setText("Code: " + response.code());
-                }
-
-                List<PhotosModel> photos = response.body();
-                for (PhotosModel photo : photos )
-                {
-                    String content = "";
-                    content += "ID: " + photo.getId() + "\n";
-                    content += "Author: " + photo.getAuthor() + "\n";
-                    content += "Url: " + photo.getUrl() + "\n\n";
-                    mApiResult.append(content);
-                }
-            }
-
-            @Override
-            public void onFailure(Call<List<PhotosModel>> call, Throwable t) {
-                mApiResult.setText(t.getMessage());
-            }
-        });
-
-         */
         photosAPICall.getPhotos().subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(new Consumer<List<PhotosModel>>() {
                     @Override
                     public void accept(List<PhotosModel> photosModels) throws Throwable {
-                        for(PhotosModel photo : photosModels) {
+                        for (PhotosModel photo : photosModels) {
                             String content = "";
                             content += "ID: " + photo.getId() + "\n";
                             content += "Author: " + photo.getAuthor() + "\n";
Index: .idea/runConfigurations.xml
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
deleted file mode 100644
--- a/.idea/runConfigurations.xml	(revision 3e3ce1517221bf1054adac34256c50884bd2f512)
+++ /dev/null	(revision 3e3ce1517221bf1054adac34256c50884bd2f512)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RunConfigurationProducerService">
-    <option name="ignoredProducers">
-      <set>
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
-      </set>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 3e3ce1517221bf1054adac34256c50884bd2f512)
+++ b/.idea/misc.xml	(date 1632994237803)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"PLATFORM\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"1.8\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 3e3ce1517221bf1054adac34256c50884bd2f512)
+++ b/.idea/gradle.xml	(date 1632994219820)
@@ -4,7 +4,7 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
-        <option name="testRunner" value="PLATFORM" />
+        <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="gradleJvm" value="1.8" />
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1632994237810)
+++ b/.idea/compiler.xml	(date 1632994237810)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.8" />
+  </component>
+</project>
\ No newline at end of file
